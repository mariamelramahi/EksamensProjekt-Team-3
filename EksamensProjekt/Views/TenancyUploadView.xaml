<Window x:Class="EksamensProjekt.TenancyUploadView"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:local="clr-namespace:EksamensProjekt.Models"
         xmlns:util="clr-namespace:EksamensProjekt.Utilities"
         xmlns:sys="clr-namespace:System;assembly=mscorlib"
         mc:Ignorable="d"
         Title="Upload Tenancy"
         Height="1080"
         Width="1920"
         ResizeMode="NoResize"
         WindowStartupLocation="CenterScreen">

    <!-- Reused Resources Section -->
    <Window.Resources>
        <util:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter" />

        <!-- BooleanToVisibilityConverter for boolean visibility bindings -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <!-- Enum-based binding for TenancyStatus -->
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="TenancyStatusValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:TenancyStatus"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <!-- Layout goes here -->
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="341*" />
                <RowDefinition Height="289*" />
            </Grid.RowDefinitions>

            <Rectangle HorizontalAlignment="Left"
               Height="1064"
               VerticalAlignment="Top"
               Width="200"
               Fill="#FF006DA0"
               Grid.RowSpan="2" />
            <!--Buttons-->
            <Button Margin="1834,0,6,521"
            BorderBrush="{x:Null}"
            Command="{Binding GoToLoginCommand}"
            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
            Background="{x:Null}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="/Images/ExitImage.png"
                   Height="45" />
                </StackPanel>
            </Button>
            <Button Content="Godkend addresse"
        HorizontalAlignment="Left"
        Margin="1620,378,0,0"
        VerticalAlignment="Top"
        Width="254"
        Background="White"
        Foreground="#FF006DA0"
        Height="48"
        FontFamily="Tahoma"
        Command="{Binding ApproveAllMatchesCommand}"
        IsEnabled="{Binding}" 
        FontSize="25"
        BorderBrush="#FF006DA0"
        Grid.Row="1">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="5" />
                    </Style>
                </Button.Resources>
            </Button>
            <Button Content="Tilbage til lejemål"
            HorizontalAlignment="Left"
            Margin="1652,11,0,0"
            VerticalAlignment="Top"
            Width="182"
            Background="White"
            Foreground="#FF006DA0"
            Height="32"
            FontFamily="Bahnschrift Light"
            Command="{Binding GoToTenancyCommand}"
            CommandParameter="{Binding}"
            FontSize="16"
            BorderBrush="#FF006DA0">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius"
                        Value="5" />
                    </Style>
                </Button.Resources>
            </Button>
            <Button Content="Slet lejemål"
                HorizontalAlignment="Left"
                Margin="256,378,0,0"
                VerticalAlignment="Top"
                Width="254"
                Background="White"
                Foreground="#FF006DA0"
                Height="48"
                FontFamily="Tahoma"
                Command="{Binding DeleteTenancyCommand}"
                CommandParameter="{Binding}"
                FontSize="25"
                BorderBrush="#FF006DA0" Grid.Row="1">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius"
                Value="5" />
                    </Style>
                </Button.Resources>
            </Button>
            <!--images-->
            <Image Margin="0,-31,1822,483"
           Source="/Images/LogoImage.png"
           Stretch="Uniform" />

            <!--Comboboxes-->
            <Expander HorizontalAlignment="Left"
              Height="99"
              Header="Match Type"
              Margin="38,212,0,0"
              VerticalAlignment="Top"
              Width="124"
              FontFamily="Tahoma"
              ScrollViewer.HorizontalScrollBarVisibility="Visible"
              Background="White">
                <Expander.Template>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel>
                                <ToggleButton x:Name="HeaderSite"
                                      Background="White"
                                      BorderBrush="{TemplateBinding Background}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <ContentPresenter ContentSource="Header" />
                                </ToggleButton>
                                <Border x:Name="ContentSiteBorder"
                                Background="White"
                                Visibility="{Binding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <ContentPresenter x:Name="ContentSite"
                                              ContentSource="Content" />
                                </Border>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Expander.Template>
                <StackPanel Height="85">
                    <CheckBox Content="Type A"
                      IsChecked="{Binding IsFilterAEnabled, Mode=TwoWay}"
                      Command="{Binding ApplyFilterCommand}"
                      HorizontalAlignment="Left"
                      Margin="10,10,0,0"
                      VerticalAlignment="Top" />
                    <CheckBox Content="Type B"
                      IsChecked="{Binding IsFilterBEnabled, Mode=TwoWay}"
                      Command="{Binding ApplyFilterCommand}"
                      HorizontalAlignment="Left"
                      Margin="10,10,0,0"
                      VerticalAlignment="Top" />
                    <CheckBox Content="Type C og D"
                      IsChecked="{Binding IsFilterCEnabled, Mode=TwoWay}"
                      Command="{Binding ApplyFilterCommand}"
                      HorizontalAlignment="Left"
                      Margin="10,10,0,0"
                      VerticalAlignment="Top" />
                </StackPanel>
            </Expander>

            <!--Labels-->
            <Label Content="Overblik"
           HorizontalAlignment="Left"
           Margin="928,35,0,0"
           VerticalAlignment="Top"
           FontSize="64"
           FontFamily="Tahoma"
           Foreground="#FF006DA0" />
            <Label Content="Lejemålsaddresser"
            HorizontalAlignment="Left"
            Margin="531,194,0,0"
            VerticalAlignment="Top"
            FontSize="44"
            FontFamily="Tahoma"
            Foreground="#FF006DA0" />
            <Label Content="Matchende addresser"
            HorizontalAlignment="Left"
            Margin="1247,193,0,0"
            VerticalAlignment="Top"
            FontSize="44"
            FontFamily="Tahoma"
            Foreground="#FF006DA0" />

            <!--Searchbox-->
            <Rectangle HorizontalAlignment="Left"
               Height="27"
               Margin="1600,89,0,0"
               Stroke="#FFA4A4A4"
               VerticalAlignment="Top"
               Width="292">
            </Rectangle>
            <Grid HorizontalAlignment="Left"
          Margin="1600,89,0,0"
          VerticalAlignment="Top">

                <!-- TextBox for user input -->
                <TextBox x:Name="SearchBox"
                 Text="{Binding SearchInput, UpdateSourceTrigger=PropertyChanged}"
                 TextWrapping="Wrap"
                 VerticalAlignment="Top"
                 Width="268"
                 Height="27"
                 FontSize="18"
                 FontFamily="Tahoma"
                 BorderBrush="{x:Null}"
                 Foreground="Black"
                 SelectionBrush="{x:Null}" />

                <!-- Placeholder TextBlock -->
                <TextBlock Text="Søg"
                   VerticalAlignment="Center"
                   Margin="5,0,0,0"
                   Foreground="#FFA4A4A4"
                   IsHitTestVisible="False"
                   Visibility="{Binding Text.Length, ElementName=SearchBox, Converter={StaticResource EmptyStringToVisibilityConverter}}" />
            </Grid>
            <Rectangle StrokeThickness="2"
               Margin="1862,91,10,448">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/Images/SearchIconImage.png"
                        Stretch="Uniform" />
                </Rectangle.Fill>
            </Rectangle>

            <ListBox x:Name="AddressListBox"
         ScrollViewer.VerticalScrollBarVisibility="Auto"
         ScrollViewer.CanContentScroll="True"
         Margin="256,262,876,165"
         ItemsSource="{Binding FilteredImportedAddresses}"
         SelectedItem="{Binding SelectedAddress, Mode=TwoWay}"
         Grid.RowSpan="2">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock FontSize="16" Padding="5">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}, {1}, {2}, {3}">
                                    <Binding Path="ImportedAddress.Street"/>
                                    <Binding Path="ImportedAddress.Number"/>
                                    <Binding Path="ImportedAddress.FloorNumber"/>
                                    <Binding Path="ImportedAddress.Zipcode"/>
                                    <Binding Path="ImportedAddress.City"/>
                                    <Binding Path="ImportedAddress.Country"/>
                                </MultiBinding>
                            </TextBlock.Text>

                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <!-- Default color when IsUserSelectionRequired is false -->
                                    <Setter Property="Foreground" Value="Black"/>
                                    <!-- or any default color you want -->

                                    <Style.Triggers>
                                        <!-- Trigger for when IsUserSelectionRequired is true -->
                                        <DataTrigger Binding="{Binding IsUserSelectionRequired, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ListBox x:Name="StandarisedAddressListBox"
         ScrollViewer.VerticalScrollBarVisibility="Auto"
         ScrollViewer.CanContentScroll="True"
         Margin="1080,262,52,165"
         ItemsSource="{Binding AddressMatches}"
         SelectedItem="{Binding UserSelectedMatch, Mode=TwoWay}"
         Grid.RowSpan="2">

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Foreground" Value="Black"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Green"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock FontSize="16" Padding="5">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}, {1}, {2}, {3}, {4}">
                                    <Binding Path="MatchScore"/>
                                    <Binding Path="PotentialAddressMatch.Street"/>
                                    <Binding Path="PotentialAddressMatch.Number"/>
                                    <Binding Path="PotentialAddressMatch.FloorNumber"/>
                                    <Binding Path="PotentialAddressMatch.Zipcode"/>
                                    <Binding Path="PotentialAddressMatch.City"/>
                                    <Binding Path="PotentialAddressMatch.Country"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>





            <Grid HorizontalAlignment="Left"
          Margin="1600,89,0,0"
          VerticalAlignment="Top">

                <!-- TextBox filter Zipcode -->

                <!-- Placeholder TextBlock -->
            </Grid>


            <!-- Implementation for ListBox drag and drop -->
            <Border BorderBrush="#FF006DA0"
        BorderThickness="2"
        CornerRadius="5"
        Margin="256,15,1256,433">
                <!-- Brug en container til at indeholde flere -->
                <Grid>
                    <TextBox Name="DropTextBox"
                 AllowDrop="True"
                 Text="{Binding Filepath, UpdateSourceTrigger=PropertyChanged}"
                 DragOver="DropTextBox_DragOver"
                 Drop="DropTextBox_Drop"
                 HorizontalAlignment="Center"
                 TextWrapping="Wrap"
                 VerticalAlignment="Center"
                 Width="384"
                 Height="108"
                 FontSize="18" />
                    <!-- Placeholder TextBlock -->
                    <TextBlock Text="Drag and Drop"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Foreground="#FFA4A4A4"
                   IsHitTestVisible="False"
                   Visibility="{Binding Text.Length, ElementName=DropTextBox, Converter={StaticResource EmptyStringToVisibilityConverter}}" FontSize="36" />
                </Grid>
            </Border>


        </Grid>
    </Grid>
</Window>
